<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="MeatloafButton.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>